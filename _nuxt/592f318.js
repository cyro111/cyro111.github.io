(window.webpackJsonp=window.webpackJsonp||[]).push([[48,24,36],{501:function(e,t,n){"use strict";n.r(t);n(31);var o={props:["related","title"]},l=n(2),component=Object(l.a)(o,(function(){var e=this,t=e._self._c;return e.related?t("footer",{staticClass:"relative items-center justify-between p-4 md:p-0"},[t("div",{staticClass:"flex flex-col p-8 border-t border-b border-black border-opacity-50 md:p-4 md:border-opacity-25 md:flex-row"},[t("NuxtLink",{staticClass:"absolute top-0 left-0 w-full h-full",attrs:{to:"/projects/".concat(e.related.slug)}}),e._v(" "),t("span",{staticClass:"flex-col items-center justify-center text-center md:w-1/4 caps md:flex"},[e.title?t("span",{staticClass:"block text-center",domProps:{innerHTML:e._s(e.title)}}):e._e()]),e._v(" "),t("span",{staticClass:"block mx-auto my-20 text-4.5xl leading-tight text-center uppercase md:w-1/2 md:text-5xl lg:text-6xl xl:text-7xl 2xl:text-6xl md:leading-tight font-display"},[e.related.formattedTitle?t("Content",{attrs:{blocks:e.related.formattedTitle}}):t("span",[e._v(e._s(e.related.name))])],1),e._v(" "),t("span",{staticClass:"flex flex-col items-center justify-center space-y-8 text-center md:w-1/4 caps"},[e.related.location?t("span",{staticClass:"flex-col hidden text-center md:flex"},[t("span",[e._v("Location")]),e._v(" "),t("Content",{attrs:{blocks:e.related.location}})],1):e._e()])],1)]):e._e()}),[],!1,null,null,null);t.default=component.exports;installComponents(component,{Content:n(174).default})},522:function(e,t,n){"use strict";n.r(t);var o=n(2),component=Object(o.a)({},(function(){var e=this._self._c;return e("svg",{staticClass:"w-full h-auto fill-current",attrs:{viewBox:"0 0 13 10",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M12.47 0L6.2 9.44L0 0.0699997L6.2 4.07C6.2 4.07 12.39 0.04 12.47 0Z"}})])}),[],!1,null,null,null);t.default=component.exports},543:function(e,t,n){"use strict";n.r(t);var o,l=n(53),r=n(9),c=(n(15),n(52),n(38),n(54)),d={data:function(){return{featuredImage:!1,coverImage:!1}},asyncData:function(e){return Object(r.a)(regeneratorRuntime.mark((function t(){var n,r,d,m;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.params,r=e.$sanity,d=Object(c.a)(o||(o=Object(l.a)(['\n      *[_type == "project" && slug.current == "','"] {\n        "image": {\n          "mobile": {\n            "image": featuredImage.mobileImage.asset._ref,\n            "alt": featuredImage.alt,\n            "size": {\n              "width": featuredImage.mobileImage.asset->metadata.dimensions.width,\n              "height": featuredImage.mobileImage.asset->metadata.dimensions.height\n            }\n          },\n          "image": featuredImage.image.asset._ref,\n          "alt": featuredImage.alt,\n          "size": {\n            "width": featuredImage.image.asset->metadata.dimensions.width,\n            "height": featuredImage.image.asset->metadata.dimensions.height\n          }\n        },\n        "video": {\n          "video": featuredImage.video.asset->playbackId,\n          "aspect": featuredImage.video.asset->data.aspect_ratio,\n          "caption": featuredImage.caption\n        },\n        location,\n        formattedTitle,\n        seo,\n        name,\n        images[] {\n          _type,\n          "image": {\n            "image": image.asset._ref,\n            "alt": image.alt,\n            "caption": image.caption,\n            "size": {\n              "width": image.asset->metadata.dimensions.width,\n              "height": image.asset->metadata.dimensions.height\n            }\n          },\n          "video": {\n            "video": video.asset->playbackId,\n            "aspect": video.asset->data.aspect_ratio,\n            "caption": caption\n          }\n        },\n        title,\n        sections[] {\n          _type,\n          _type == \'slider\' => {\n            title,\n            slides[] {\n              type == \'Project\' => {\n                "title": project->title,\n                "image": {\n                  "image": project->featuredImage.image.asset._ref,\n                  "alt": project->featuredImage.alt,\n                  "size": {\n                    "width": project->featuredImage.image.asset->metadata.dimensions.width,\n                    "height": project->featuredImage.image.asset->metadata.dimensions.height\n                  }\n                },\n                "video": {\n                  "video": project->featuredImage.video.asset->playbackId,\n                  "aspect": project->featuredImage.video.asset->data.aspect_ratio,\n                  "caption": project->featuredImage.caption\n                }\n              },\n              type == \'Image\' => {\n                "image": {\n                  "mobile": {\n                    "image": imageObject.mobileImage.asset._ref,\n                    "size": {\n                      "width": imageObject.mobileImage.asset->metadata.dimensions.width,\n                      "height": imageObject.mobileImage.asset->metadata.dimensions.height\n                    }\n                  },\n                  "image": imageObject.image.asset._ref,\n                  "alt": imageObject.alt,\n                  "caption": imageObject.caption,\n                  "size": {\n                    "width": imageObject.image.asset->metadata.dimensions.width,\n                    "height": imageObject.image.asset->metadata.dimensions.height\n                  }\n                },\n                "video": {\n                  "video": imageObject.video.asset->playbackId,\n                  "aspect": imageObject.video.asset->data.aspect_ratio,\n                  "caption": imageObject.caption\n                }\n              }\n            }\n          },\n          _type == \'textContent\' => {...},\n          _type == \'blocks\' => {\n            border,\n            title,\n            blocksArray[] {\n              "link": {\n                "type": "page",\n                link->_type == "project" => {"type": "case-study"},\n                "slug": link->slug.current\n              },\n              "image": {\n                "image": imageObject.image.asset._ref,\n                "alt": imageObject.alt,\n                "caption": imageObject.caption,\n                "size": {\n                  "width": imageObject.image.asset->metadata.dimensions.width,\n                  "height": imageObject.image.asset->metadata.dimensions.height\n                }\n              },\n              "video": {\n                "video": imageObject.video.asset->playbackId,\n                "aspect": imageObject.video.asset->data.aspect_ratio,\n                "caption": imageObject.caption\n              },\n              "title": title\n            }\n          },\n          _type == \'grid\' => {\n            border,\n            "cols": grid.columns,\n            columns[] {\n              _type == \'spacer\' => {_type, span},\n              _type == \'imageCell\' => {\n                "textContent": content,\n                _type,\n                span,\n                "image": {\n                  "image": image.image.asset._ref,\n                  "alt": image.alt,\n                  "caption": video.caption,\n                  "size": {\n                    "width": image.image.asset->metadata.dimensions.width,\n                    "height": image.image.asset->metadata.dimensions.height\n                  }\n                },\n                "video": {\n                  "video": image.video.asset->playbackId,\n                  "aspect": image.video.asset->data.aspect_ratio,\n                  "caption": image.caption\n                }\n              },\n              _type == \'textCell\' => {_type, span, content},\n              _type == \'videoCell\' => {\n                "textContent": content,\n                _type,\n                span,\n                "video": {\n                  "video": video.video.asset->playbackId,\n                  "aspect": video.video.asset->data.aspect_ratio,\n                  "caption": video.caption\n                }\n              }\n            }\n          }\n        },\n        "related": {\n          "title": related->title,\n          "slug": related->slug.current,\n          "name": related->name,\n          "formattedTitle": related->formattedTitle,\n          "location": related->location\n        }\n      } | order(_updatedAt desc)[0]\n    '])),n.slug),t.next=4,r.fetch(d);case 4:return m=t.sent,t.abrupt("return",{project:m});case 6:case"end":return t.stop()}}),t)})))()},methods:{scroll:function(){this.$refs.content.scrollIntoView({top:0,left:0,behavior:"smooth"})}},head:function(){var e={title:"Projects | "+this.project.title};return this.project.seo&&(this.project.seo.title&&(e.title="Projects | "+this.project.seo.title),this.project.seo.description&&(e.description=this.project.seo.description)),this.$seo(e)}},m=n(2),component=Object(m.a)(d,(function(){var e=this,t=e._self._c;return t("div",{staticClass:"min-h-full pt-32 md:pt-0"},[t("section",{staticClass:"relative hidden w-full h-screen md:block max-h-hero md:mt-0"},[t("Media",{staticClass:"absolute object-cover w-full h-full",attrs:{image:e.project.image,video:e.project.video,sizes:"sm:125vw md:100vw lg:150vw xl:200vw",mediaClass:"absolute object-cover w-full h-full"}}),e._v(" "),t("footer",{staticClass:"absolute bottom-0 left-0 flex justify-center w-full my-8 text-cream caps"},[t("button",{staticClass:"w-8 group",on:{click:function(t){return e.scroll()}}},[t("SvgArrowDown",{staticClass:"transition-transform duration-300 transform group-hover:-translate-y-4"})],1)])],1),e._v(" "),t("div",{ref:"content"},[t("header",{staticClass:"p-8 text-center md:hidden"},[e.project.formattedTitle?t("h1",{staticClass:"text-4.5xl uppercase font-display mb-12"},[t("Content",{attrs:{blocks:e.project.formattedTitle}})],1):e._e()]),e._v(" "),t("section",{staticClass:"relative w-full px-6 md:hidden max-h-hero md:mt-0"},[e.project.image?t("MediaImage",{staticClass:"object-cover w-full h-auto",attrs:{image:e.project.image,sizes:"sm:200vw lg:2500px"}}):e._e()],1),e._v(" "),t("section",[t("Sections",{attrs:{sections:e.project.sections}})],1),e._v(" "),e.project.related?t("Related",{attrs:{title:"Next",related:e.project.related}}):e._e()],1)])}),[],!1,null,null,null);t.default=component.exports;installComponents(component,{Media:n(484).default,SvgArrowDown:n(522).default,Content:n(174).default,MediaImage:n(472).default,Sections:n(494).default,Related:n(501).default})}}]);